version: '3.9'

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./tourism:/tourism
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             gunicorn A.wsgi -b 0.0.0.0:8000 &&
             python manage.py runserver 0.0.0.0:8000"
    container_name: app
    networks:
      - main
    restart: always
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on: # docker compose make sure that database start first
      - db


  db:
    image: postgis/postgis:15-3.3-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

  nginx:
    container_name: nginx
    command: nginx -g 'daemon off;'
    image: nginx:latest
    depends_on:
      - app
    networks:
      - main
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  dev-db-data:
  dev-static-data:

  networks:
    main: